'use strict';

// tests for twilioCallback
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
const sinon = require('sinon');
const helpers = require('../helpers');
let wrapped = mochaPlugin.getWrapper('twilioCallback', '/handler.js', 'twilioCallback');

describe('twilioCallback', () => {
  beforeEach((done) => {
    this.event = {
      pathParameters: {
        number: '+12199339000'
      }
    };
    this.twiml = 'TWIML';
    this.toStringStub = sinon.stub();
    this.toStringStub.returns(this.twiml);
    this.dialStub = sinon.stub();
    this.getVoiceResponseStub = sinon.stub(helpers, 'getVoiceResponse');
    this.getVoiceResponseStub.returns({
      toString: this.toStringStub,
      dial: this.dialStub
    });

    done();
  });

  afterEach(() => {
    this.getVoiceResponseStub.restore();
  });

  it('calls dial() with number', () => {
    return wrapped.run(this.event).then((response) => {
      expect(this.dialStub.calledWith(this.event.pathParameters.number)).to.be.true;
    });
  });

  it('calls toString()', () => {
    return wrapped.run(this.event).then((response) => {
      expect(this.toStringStub.called).to.be.true;
    });
  });

  it('return result of toString()', () => {
    return wrapped.run(this.event).then((response) => {
      expect(response).to.deep.equal({
        statusCode: 200,
        headers: {
          'Content-Type': 'text/xml'
        },
        body: this.twiml
      });
    });
  });
});
